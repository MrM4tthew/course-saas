import { useUser } from "@auth0/nextjs-auth0";
import axios from "axios";
import Head from "next/head";
import Image from "next/image";
// import { getCourses } from "../utils/db";
import Header from "../components/Layout/Header";
import Layout from "../components/Layout";
import Blogcard from "../components/uicomponents/Blogcard";
import styled from "styled-components";
import { MaxWidth } from "../styles/globalStyle";

const Container = styled.div`
  display: flex;
  justify-content: center;
  padding: 80px 0px;
`;

const ContainerBox = styled(MaxWidth)`
  display: flex;
  .blogCards {
    width: 100%;
    display: grid;
    column-gap: 30px;
    grid-template-columns: 1fr 1fr 1fr;
  }
`;

export default function Home({ courses, blogs }) {
  const { user, error, isLoading } = useUser();

  if (isLoading) return <div>Loading...</div>;
  if (error) return <div>{error.message}</div>;

  console.log(blogs);

  // return (
  //   <div className={styles.container}>
  //     <Head>
  //       <title>Create Next App</title>
  //       <meta name="description" content="Generated by create next app" />
  //       <link rel="icon" href="/favicon.ico" />
  //     </Head>

  //     <main className={styles.main}>
  //       {/* <h1>Courses</h1>
  //       <pre>{JSON.stringify(courses, null, 2)}</pre> */}
  //     </main>

  //     {/* <footer className={styles.footer}>

  //     </footer> */}
  //   </div>
  // );

  return (
    <Layout user={user}>
      <Container>
        <ContainerBox>
          {user ? (
            <div className="blogCards">
              {blogs.map((blog, key) => (
                <Blogcard key={key} blog={blog} />
              ))}
            </div>
          ) : (
            ""
          )}
        </ContainerBox>
      </Container>
    </Layout>
  );
}

export const getServerSideProps = async () => {
  const response = await fetch(
    `http://wordpressrestapi.local/wp-json/wp/v2/posts?_embed`,
    {
      headers: {
        Authorization: "Basic " + process.env.BASIC_AUTH_WORDPRESS_BLOG,
      },
    }
  );
  // const data = await getCourses();

  const blogs = await response.json();

  return {
    props: {
      // courses: JSON.parse(JSON.stringify(data)), // this will be passed to our Component as a prop
      blogs: blogs,
    },
  };
};
